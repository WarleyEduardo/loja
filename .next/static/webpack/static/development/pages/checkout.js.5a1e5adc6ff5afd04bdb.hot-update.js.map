{"version":3,"file":"static/webpack/static\\development\\pages\\checkout.js.5a1e5adc6ff5afd04bdb.hot-update.js","sources":["webpack:///./redux/actions/checkoutActions.js"],"sourcesContent":["/*modulo 49 - integração checkout - desenvolvendo o container dos dados do cliente */\r\n\r\nimport { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH, PAGAR_PEDIDO , NOVO_PEDIDO } from '../types';\r\n\r\n/* módulo 49 -  Dados de pagamento - preparando a base, actions e  funções do pagseguro */\r\nimport axios from 'axios';\r\nimport { url , loja } from '../../config'\r\n\r\nimport { getCart } from '../../utils/cart';\r\n\r\nimport { getHeaders } from './helpers';\r\n\r\n/*modulo 49 - Botão final de checkout -  preprando base , actions e reducers */\r\n\r\nimport errorHandling from './errorHandling';\r\n\r\nimport Router from 'next/router';\r\nimport { cleanCarrinho } from './carrinhoActions';\r\n\r\nexport const novoPedido = (form, freteSelecionado, tipoPagamentoSelecionado,\r\n valorTotal, token, senderHash, carrinho = getCart() , cb = null\r\n\r\n) => dispatch => {\r\n\r\n\tconsole.log('meu carrinho',carrinho)\r\n\r\n\taxios\r\n\t\t.post(\r\n\t\t\t`${url}/api/pedidos?loja=${loja}`,\r\n\t\t\t{\r\n\t\t\t\tcarrinho,\r\n\t\t\t\tentrega: {\r\n\t\t\t\t\tcusto: freteSelecionado.Valor.replace(',', '.'),\r\n\t\t\t\t\ttipo: freteSelecionado.Codigo.toString(),\r\n\t\t\t\t\tprazo: freteSelecionado.PrazoEntrega,\r\n\t\t\t\t\tendereco: {\r\n\t\t\t\t\t\tlocal: form.local,\r\n\t\t\t\t\t\tnumero: form.numero,\r\n\t\t\t\t\t\tcomplemento: form.complemento,\r\n\t\t\t\t\t\tbairro: form.bairro,\r\n\t\t\t\t\t\tcidade: form.cidade,\r\n\t\t\t\t\t\testado: form.estado,\r\n\t\t\t\t\t\tCEP: form.CEP,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tpagamento: {\r\n\t\t\t\t\tvalor: tipoPagamentoSelecionado === 'cartao' ? form.parcelasCartaoSelecionada.totalAmount : valorTotal,\r\n\t\t\t\t\tforma: tipoPagamentoSelecionado === 'cartao' ? 'creditCard' : 'boleto',\r\n\t\t\t\t\tparcelas: tipoPagamentoSelecionado === 'cartao' ? form.parcelasCartaoSelecionada.quantity : 1,\r\n\t\t\t\t\tenderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\r\n\t\t\t\t\tendereco: {\r\n\t\t\t\t\t\tlocal: form.dadosEntregaIgualDadosCobranca ? form.local : form.dadosCobranca.local,\r\n\t\t\t\t\t\tnumero: form.dadosEntregaIgualDadosCobranca ? form.numero : form.dadosCobranca.numero,\r\n\t\t\t\t\t\tcomplemento: form.dadosEntregaIgualDadosCobranca ? form.complemento : form.dadosCobranca.complemento,\r\n\t\t\t\t\t\tbairro: form.dadosEntregaIgualDadosCobranca ? form.bairro : form.dadosCobranca.bairro,\r\n\t\t\t\t\t\tcidade: form.dadosEntregaIgualDadosCobranca ? form.cidade : form.dadosCobranca.cidade,\r\n\t\t\t\t\t\testado: form.dadosEntregaIgualDadosCobranca ? form.estado : form.dadosCobranca.estado,\r\n\t\t\t\t\t\tCEP: form.dadosEntregaIgualDadosCobranca ? form.CEP : form.dadosCobranca.CEP,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcartao:\r\n\t\t\t\t\t\ttipoPagamentoSelecionado === 'cartao'\r\n\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\tnomeCompleto: form.nomeCartao.trim(),\r\n\t\t\t\t\t\t\t\t\tcodigoArea: form.telefone.slice(0, 2),\r\n\t\t\t\t\t\t\t\t\ttelefone: form.telefone.slice(2).trim(),\r\n\t\t\t\t\t\t\t\t\tdataDeNascimento: form.dataDeNascimento,\r\n\t\t\t\t\t\t\t\t\tcredit_card_token: form.credit_card_token,\r\n\t\t\t\t\t\t\t\t\tcpf: form.cpf,\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgetHeaders(token)\r\n\t\t)\r\n\t\t.then((response) => {\r\n\t\t\tdispatch({ type: NOVO_PEDIDO, payload: response.data });\r\n\t\t\tdispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash));\r\n\t\t\tcb(null);\r\n\t\t})\r\n\t\t.catch((e) => cb(errorHandling(e)));\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\nexport const pagarPedido = (id, token, senderHash) => (dispatch) => {\r\n\taxios.post(`${url}/api/pagamentos/pagar/${id}?loja=${loja}`,\r\n\t\t{\r\n\t\t\tsenderHash,\r\n\t\t},\r\n\t\tgetHeaders(token)\r\n\t   )\r\n\t\t.then((response) => {\r\n\t\t\t\tdispatch({ type: PAGAR_PEDIDO, payload: response.data });\r\n\t\t\t\tRouter.push('/sucesso');\r\n\t\t\t\tdispatch(cleanCarrinho());\r\n\t\t\t\tdispatch(cleanForm());\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e));\r\n};\r\n\r\nexport const cleanForm = () => ({ type: CLEAN_FORM })\r\n\r\nexport const setTipoPagamento = (tipoPagamentoSelecionado) => ({\r\n\r\n\ttype: SET_TIPO_PAGAMENTO, tipoPagamentoSelecionado\r\n});\r\n\r\nexport const getSessionPagamento = () => dispatch => {\r\n\t\r\n\taxios.get(`${url}/api/pagamentos/session`).then((response) => {\r\n\r\n\t\tdispatch({ type: FETCH_SESSION_ID, payload: response.data });\r\n\r\n\t\tPagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n\r\n\t\tlet senderHash = PagSeguroDirectPayment.getSenderHash();\r\n\t\t/*\r\n\t\tPagSeguroDirectPayment.onSenderHashReady((response) => {\r\n\t\t\tif (response.status == 'error') {\r\n\t\t\t\tconsole.log(response.message);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t console.log(response.senderHash);\r\n\t\t\t\r\n\t\t}\r\n\t\t);\r\n\t\t*/\r\n\t\t\r\n\t\tdispatch({ type: FETCH_SENDER_HASH, senderHash });\r\n\t}).catch( e => console.log(e)) \t\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const setForm = (payload, prefix) => dispatch => {\r\n\r\n\tdispatch({ type: SET_FORM, payload, prefix });\r\n\r\n\treturn Promise.resolve();\r\n};\r\n\r\n\r\n\r\nexport default {\r\n\tsetForm,\r\n\tgetSessionPagamento,\r\n\tsetTipoPagamento,\r\n\tcleanForm,\r\n\tnovoPedido,\r\n\tpagarPedido\r\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAIA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}
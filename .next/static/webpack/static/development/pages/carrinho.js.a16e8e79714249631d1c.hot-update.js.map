{"version":3,"file":"static/webpack/static\\development\\pages\\carrinho.js.a16e8e79714249631d1c.hot-update.js","sources":["webpack:///./redux/actions/authActions.js","webpack:///./redux/actions/errorHandling.js"],"sourcesContent":["/* modulo 40 - loja virtual - criando helper para inicialização*/\r\n\r\n/* modulo 44 - Criando actions e reduces para integração 1/2*/\r\n\r\nimport { AUTENTICAR_TOKEN, USER } from '../types';\r\n\r\nimport axios from 'axios';\r\nimport { url } from '../../config.js';\r\n\r\n\r\n/* modulo 47 - integrando o componente de avaliações 2/2 */\r\n//const getHeaders = token => ({ headers: { \"Authorization\": `Ecommerce ${token}` } });\r\nimport { getHeaders } from './helpers';\r\n\r\n\r\n/* modulo 49  - Criando as funções e error handlign para os dados do cliente 1/2*/\r\n\r\nimport { setCookie } from '../../utils/cookie';\r\nimport Router from 'next/router';\r\nimport errorHandling from './errorHandling';\r\n\t\r\n\r\nexport const reauthenticate = token => ({ type: AUTENTICAR_TOKEN, payload: token})\r\n\r\nexport const getUser = ({ token }) => (dispatch) => {\r\n\t\r\n\t\r\n\taxios.get(`${url}/api/usuarios`, getHeaders(token))\r\n\t\t.then((response) => dispatch({ type: USER, payload: response.data.usuario }))\r\n\t    .catch( e => console.log(e))\r\n}\r\n\r\n/*Criando as funções e error handlign para os dados do cliente 1/2*/\r\n\r\nexport const autenticar = ({ email, password } , goTo = fase , cb) =>\r\n\t(dispatch) => {\r\n\t\taxios\r\n\t\t\t.post(`${url}/api/usuarios/login`, { email, password})\r\n\t\t\t.then((response) => {\r\n\t\t\t\t\r\n\t\t\t\tsetCookie('token', response.data.usuario.token);\r\n\r\n\t\t\t\tif (goTo) Router.push(goTo) \r\n\r\n\t\t\t\tdispatch({ type: AUTENTICAR_TOKEN, payload: response.data });\r\n                //dispatch(fetchCliente(response.data.usuario._id,response.data.usuario.token))  \r\n\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t\t.catch((e) => cb(errorHandling(e)));\r\n\t};\r\n\r\nexport default {\r\n\treauthenticate,\r\n\tgetUser,\r\n\tpostUser\r\n};\r\n","/*Criando as funções e error handlign para os dados do cliente 1/2*/\r\n const errorHandling = (error) => {\r\n\t\r\n\tconsole.log(error, error.response.data);\r\n\r\n\tif (!error.response || !error.data) {\r\n\t\t\r\n\t\treturn { status: 500, message: \"Ocorreu um erro no servidor. Tente novamente.\" };\r\n\t}\r\n\r\n\r\n\tif (error.response.data.status === 401) {\r\n\r\n\t\treturn { status: 401, message: \"Você não tem autorização para acessar esses dados.\" };\r\n\t}\r\n\r\n\tconst _errors = error.response.data.errors || error.response.data.error;\r\n\r\n\tif (_errors && typeof _errors === \"string\") return { status: 400, message: _erros };\r\n\r\n\tlet msg = 'Erro: ';\r\n\tif (!Array.isArray(_errors)) {\r\n\r\n\t\tObject.keys(_errors).forEach((erro, index) => {\r\n\t\t\t\r\n\t\t\tmsg += `${erro} ${_errors[erro].message || _errors[erro]}\\n`;\r\n\t\t} )\r\n\t} else {\r\n\r\n\t\tmsg += `Preenchar corretamente ${_errors.length > 1 ? \"os campos \" : \"o campo \"} de:`;\r\n\t\t_errors.forEach((item, index) => {\r\n\t\t\t\r\n\t\t\tconst field = item.field[item.field.length - 1];\r\n\t\t\tmsg += ` ${field} ${index === _errors.length - 1 ? \".\" : \",\"}` \r\n\t\t})\r\n\t}\r\n\r\n\r\n\treturn { status: 400, message: msg };\r\n};\r\n\r\n\r\nexport default errorHandling;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static\\development\\pages\\checkout.js.aa430219f6f4dd29b403.hot-update.js","sources":["webpack:///./redux/actions/checkoutActions.js"],"sourcesContent":["/*modulo 49 - integração checkout - desenvolvendo o container dos dados do cliente */\r\n\r\nimport { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH } from '../types';\r\n\r\n/* módulo 49 -  Dados de pagamento - preparando a base, actions e  funções do pagseguro */\r\nimport axios from 'axios';\r\nimport { url , loja } from '../../config'\r\n\r\nimport { getCart } from '../../utils/cart';\r\n\r\nimport { getHeaders } from './helpers';\r\n\r\n/*modulo 49 - Botão final de checkout -  preprando base , actions e reducers */\r\n\r\nexport const novoPedido = (form, freteSelecionado, tipoPagamentoSelecionado,\r\n valorTotal, token, senderHash, carrinho = getCart() , cb = null\r\n\r\n) => dispatch => {\r\n\r\n\taxios.post(`${url}/api/pedidos/loja${loja}`, {\r\n\t\tcarrinho,\r\n\t\tentrega: {\r\n\r\n\t\t\tcusto: freteSelecionado.Valor.replace(',', '.'),\r\n\t\t\ttipo: (freteSelecionado.Codigo).toString(),\r\n\t\t\tprazo: freteSelecionado.prazoEntrega,\r\n\t\t\tendereco: {\r\n\t\t\t\tlocal: form.local,\r\n\t\t\t\tnumero: form.numero,\r\n\t\t\t\tcomplemento: form.complemento,\r\n\t\t\t\tbairro: form.bairro,\r\n\t\t\t\tcidade: form.cidade,\r\n\t\t\t\testado: form.estado,\r\n\t\t\t\tCEP: form.CEP\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t               \r\n\t  },getHeaders(token)\r\n\t\r\n\t)\r\n\r\n\r\n}\r\n\r\nexport const cleanForm = () => ({ type: CLEAN_FORM })\r\n\r\nexport const setTipoPagamento = (tipoPagamentoSelecionado) => ({\r\n\r\n\ttype: SET_TIPO_PAGAMENTO, tipoPagamentoSelecionado\r\n});\r\n\r\nexport const getSessionPagamento = () => dispatch => {\r\n\t\r\n\taxios.get(`${url}/api/pagamentos/session`).then((response) => {\r\n\r\n\t\tdispatch({ type: FETCH_SESSION_ID, payload: response.data });\r\n\r\n\t\tPagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n\r\n\t\tlet senderHash = PagSeguroDirectPayment.getSenderHash();\r\n\t\t/*\r\n\t\tPagSeguroDirectPayment.onSenderHashReady((response) => {\r\n\t\t\tif (response.status == 'error') {\r\n\t\t\t\tconsole.log(response.message);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t console.log(response.senderHash);\r\n\t\t\t\r\n\t\t}\r\n\t\t);\r\n\t\t*/\r\n\t\t\r\n\t\tdispatch({ type: FETCH_SENDER_HASH, senderHash });\r\n\t}).catch( e => console.log(e)) \t\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const setForm = (payload, prefix) => dispatch => {\r\n\r\n\tdispatch({ type: SET_FORM, payload, prefix });\r\n\r\n\treturn Promise.resolve();\r\n};\r\n\r\nexport default {\r\n\tsetForm,\r\n\tgetSessionPagamento,\r\n\tsetTipoPagamento,\r\n\tcleanForm\r\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}